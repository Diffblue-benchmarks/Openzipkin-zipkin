# Copyright 2019 Diffblue Limited. All Rights Reserved.
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
  # Constrain the size of arrays created in the analyzed code.
  java-max-vla-length: 100000
  # Set a limit on the number of instructions that can be generated as part of a test trace.
  depth: false
  # exclude trivial coverage test goals
  no-trivial-tests: true 
  # Do not test any methods that have the specified access level.
  do-not-test-methods-with-access: [private]
  # Instrument the entry point function only.
  cover-function-only: false
  # instrument the file as opposed to the function only
  cover-only: file
phases:
  -
    # Phase 0 PRETTY, SIMPLE and SMART - pretty tests, do not test private methods directly, Smart-Harness
    timeout: 180
    cbmcArguments:
      # Use simple models first containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [private]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value
      string-input-value: ["foo", "Bar", "BAZ", "1234", "1a 2b 3c", "A1B2C3", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c", ",", "/", "'"]
      # Instantiate classes using the simplest constructor strategy
      smart-harness: simplest-constructor-and-nondet
      # Force float and double inputs to have integer values.
      java-assume-inputs-integral: true
      # Only initialize numerical primitive-typed parameter within the given range
      java-assume-inputs-interval: "[2:999999]"
  -
    # Phase 0 PRETTY, SIMPLE and SMART - pretty tests, do not test private methods directly, Smart-Harness
    timeout: 180
    cbmcArguments:
      # Use simple models first containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [private]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value
      string-input-value: ["foo", "Bar", "BAZ", "1234", "1a 2b 3c", "A1B2C3", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c", ",", "/", "'"]
      # Instantiate classes using the simplest constructor strategy
      smart-harness: simplest-constructor-and-nondet
      # Force float and double inputs to have integer values.
      java-assume-inputs-integral: true
      # Only initialize numerical primitive-typed parameter within the given range
      java-assume-inputs-interval: "[-100:-2]"
  -
    # Phase 1 PRETTY AND COMPLEX - standard models only, pretty tests, do not test private methods directly, input factory
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value
      string-input-value: ["foo", "Bar", "BAZ", "1234", "1a 2b 3c", "A1B2C3", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c", ",", "/", "'"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Limit input factory recursive depth (default 0 = no recursion allowed)
      java-test-input-factory-bmc-recursion-limit: 4
      # Force float and double inputs to have integer values.
      java-assume-inputs-integral: true
  -
    # Phase 2 FIFO Strategy - pretty tests, do not test private methods directly, fifo
    timeout: 100
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Add constraint that strings are printable
      max-nondet-string-length: 100
      # Explores the program tree breadth-first.
      paths: fifo
      # Set string input value
      string-input-value: ["foo", "Bar", "BAZ", "1234", "1a 2b 3c", "A1B2C3", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c", ",", "/", "'"]
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: false
  -
    # Phase 3 Exceptions - do not test private methods directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers first (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
      unwind: 3
  -
    # Phase 4 - Sledgehammer 
    timeout: 240
    cbmcArguments:
      # Use simple models containers first (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models.jar:.'
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 50
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
      unwind: 16
      # Add constraint that strings are printable
      string-printable: false
units:
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/internal/V1ThriftSpanWriter$ThriftBinaryAnnotationWriter.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/V1ThriftSpanWriter.java
   - dir: zipkin/target/classes
     file: zipkin2/internal/WriteBuffer.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/WriteBuffer.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint$Builder.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint$IpFamily.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint$SerializedForm.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
 - target:
   - dir: benchmarks/target/classes
     file: zipkin2/internal/ReadBufferBenchmarks.class
     sourceDir: benchmarks/src/main/java
     sourceFile: zipkin2/internal/ReadBufferBenchmarks.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/internal/JsonEscaper.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/JsonEscaper.java
 - target:
   - dir: zipkin-collector/core/target/classes
     file: zipkin2/collector/InMemoryCollectorMetrics.class
     sourceDir: zipkin-collector/core/src/main/java
     sourceFile: zipkin2/collector/InMemoryCollectorMetrics.java
   - dir: zipkin-collector/core/target/classes
     file: zipkin2/collector/CollectorMetrics.class
     sourceDir: zipkin-collector/core/src/main/java
     sourceFile: zipkin2/collector/CollectorMetrics.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/internal/V1ThriftSpanWriter$ThriftAnnotationWriter.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/V1ThriftSpanWriter.java
   - dir: zipkin/target/classes
     file: zipkin2/internal/WriteBuffer.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/WriteBuffer.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint$Builder.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
 - target:
   - dir: zipkin-storage/elasticsearch/target/classes
     file: zipkin2/elasticsearch/VersionSpecificTemplates.class
     sourceDir: zipkin-storage/elasticsearch/src/main/java
     sourceFile: zipkin2/elasticsearch/VersionSpecificTemplates.java
   - dir: zipkin-storage/elasticsearch/target/classes
     file: zipkin2/elasticsearch/internal/client/HttpCall$Factory.class
     sourceDir: zipkin-storage/elasticsearch/src/main/java
     sourceFile: zipkin2/elasticsearch/internal/client/HttpCall.java
   - dir: zipkin-storage/elasticsearch/target/classes
     file: zipkin2/elasticsearch/ElasticsearchStorage.class
     sourceDir: zipkin-storage/elasticsearch/src/main/java
     sourceFile: zipkin2/elasticsearch/ElasticsearchStorage.java
   - dir: zipkin-storage/elasticsearch/target/classes
     file: zipkin2/elasticsearch/IndexTemplates.class
     sourceDir: zipkin-storage/elasticsearch/src/main/java
     sourceFile: zipkin2/elasticsearch/IndexTemplates.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/internal/WriteBuffer.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/internal/WriteBuffer.java
 - target:
   - dir: zipkin/target/classes
     file: zipkin2/Span.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Span.java
   - dir: zipkin/target/classes
     file: zipkin2/Span$Kind.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Span.java
   - dir: zipkin/target/classes
     file: zipkin2/Endpoint.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Endpoint.java
   - dir: zipkin/target/classes
     file: zipkin2/Span$Builder.class
     sourceDir: zipkin/src/main/java
     sourceFile: zipkin2/Span.java

